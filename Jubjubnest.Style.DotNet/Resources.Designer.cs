//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Jubjubnest.Style.DotNet {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Jubjubnest.Style.DotNet.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string BracesOnTheirOwnLine_Description {
            get {
                return ResourceManager.GetString("BracesOnTheirOwnLine_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert the brace on its own line..
        /// </summary>
        internal static string BracesOnTheirOwnLine_Message {
            get {
                return ResourceManager.GetString("BracesOnTheirOwnLine_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Braces must be on their own line.
        /// </summary>
        internal static string BracesOnTheirOwnLine_Title {
            get {
                return ResourceManager.GetString("BracesOnTheirOwnLine_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string ClosingParameterParenthesesOnTheirOwnLines_Description {
            get {
                return ResourceManager.GetString("ClosingParameterParenthesesOnTheirOwnLines_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move the parameter list parenthesis on its own line..
        /// </summary>
        internal static string ClosingParameterParenthesesOnTheirOwnLines_Message {
            get {
                return ResourceManager.GetString("ClosingParameterParenthesesOnTheirOwnLines_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple parameter list parenthesis should be on their own line.
        /// </summary>
        internal static string ClosingParameterParenthesesOnTheirOwnLines_Title {
            get {
                return ResourceManager.GetString("ClosingParameterParenthesesOnTheirOwnLines_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each logical code segment must be commented. Code segments are segments of code separated by empty lines..
        /// </summary>
        internal static string CommentedSegments_Description {
            get {
                return ResourceManager.GetString("CommentedSegments_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add comment to the code segment..
        /// </summary>
        internal static string CommentedSegments_Message {
            get {
                return ResourceManager.GetString("CommentedSegments_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All code segments should be commented.
        /// </summary>
        internal static string CommentedSegments_Title {
            get {
                return ResourceManager.GetString("CommentedSegments_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string CommentStartsWithSpace_Description {
            get {
                return ResourceManager.GetString("CommentStartsWithSpace_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add space between the comment marks and the text..
        /// </summary>
        internal static string CommentStartsWithSpace_Message {
            get {
                return ResourceManager.GetString("CommentStartsWithSpace_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single line comments must have a space after the &apos;//&apos;.
        /// </summary>
        internal static string CommentStartsWithSpace_Title {
            get {
                return ResourceManager.GetString("CommentStartsWithSpace_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string DoubleTabContinuationIndent_Description {
            get {
                return ResourceManager.GetString("DoubleTabContinuationIndent_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add double indent to the continuation line..
        /// </summary>
        internal static string DoubleTabContinuationIndent_Message {
            get {
                return ResourceManager.GetString("DoubleTabContinuationIndent_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Continuation lines should have double indent.
        /// </summary>
        internal static string DoubleTabContinuationIndent_Title {
            get {
                return ResourceManager.GetString("DoubleTabContinuationIndent_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string IndentWithTabs_Description {
            get {
                return ResourceManager.GetString("IndentWithTabs_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace space indent with tabs..
        /// </summary>
        internal static string IndentWithTabs_Message {
            get {
                return ResourceManager.GetString("IndentWithTabs_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indenting should be done with tabs instead of spaces..
        /// </summary>
        internal static string IndentWithTabs_Title {
            get {
                return ResourceManager.GetString("IndentWithTabs_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string KeepLinesWithin120Characters_Description {
            get {
                return ResourceManager.GetString("KeepLinesWithin120Characters_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Split the line to stay within the 120 character limit..
        /// </summary>
        internal static string KeepLinesWithin120Characters_Message {
            get {
                return ResourceManager.GetString("KeepLinesWithin120Characters_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lines should be limited to 120 characters.
        /// </summary>
        internal static string KeepLinesWithin120Characters_Title {
            get {
                return ResourceManager.GetString("KeepLinesWithin120Characters_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameConstantsWithCamelCase_Description {
            get {
                return ResourceManager.GetString("NameConstantsWithCamelCase_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename the constant &apos;{0}&apos; using CamelCasing..
        /// </summary>
        internal static string NameConstantsWithCamelCase_Message {
            get {
                return ResourceManager.GetString("NameConstantsWithCamelCase_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Constants should be named with CamelCasing.
        /// </summary>
        internal static string NameConstantsWithCamelCase_Title {
            get {
                return ResourceManager.GetString("NameConstantsWithCamelCase_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameEnumValuesWithPascalCase_Description {
            get {
                return ResourceManager.GetString("NameEnumValuesWithPascalCase_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename the enumeration value &apos;{0}&apos; using PascalCasing..
        /// </summary>
        internal static string NameEnumValuesWithPascalCase_Message {
            get {
                return ResourceManager.GetString("NameEnumValuesWithPascalCase_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumeration values should be named with PascalCasing.
        /// </summary>
        internal static string NameEnumValuesWithPascalCase_Title {
            get {
                return ResourceManager.GetString("NameEnumValuesWithPascalCase_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameEventsWithPascalCase_Description {
            get {
                return ResourceManager.GetString("NameEventsWithPascalCase_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename the event &apos;{0}&apos; using PascalCasing..
        /// </summary>
        internal static string NameEventsWithPascalCase_Message {
            get {
                return ResourceManager.GetString("NameEventsWithPascalCase_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Events should be named with PascalCasing.
        /// </summary>
        internal static string NameEventsWithPascalCase_Title {
            get {
                return ResourceManager.GetString("NameEventsWithPascalCase_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameExceptionsWithExceptionSuffix_Description {
            get {
                return ResourceManager.GetString("NameExceptionsWithExceptionSuffix_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Exception suffix to &apos;{0}&apos; exception type name..
        /// </summary>
        internal static string NameExceptionsWithExceptionSuffix_Message {
            get {
                return ResourceManager.GetString("NameExceptionsWithExceptionSuffix_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exception names should end with Exception..
        /// </summary>
        internal static string NameExceptionsWithExceptionSuffix_Title {
            get {
                return ResourceManager.GetString("NameExceptionsWithExceptionSuffix_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameFieldsWithCamelCase_Description {
            get {
                return ResourceManager.GetString("NameFieldsWithCamelCase_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename the field &apos;{0}&apos; using camelCasing..
        /// </summary>
        internal static string NameFieldsWithCamelCase_Message {
            get {
                return ResourceManager.GetString("NameFieldsWithCamelCase_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fields should be named with camelCasing.
        /// </summary>
        internal static string NameFieldsWithCamelCase_Title {
            get {
                return ResourceManager.GetString("NameFieldsWithCamelCase_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameFilesAccordingToTypeNames_Description {
            get {
                return ResourceManager.GetString("NameFilesAccordingToTypeNames_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move type &apos;{0}&apos; to file &apos;{1}&apos;..
        /// </summary>
        internal static string NameFilesAccordingToTypeNames_Message {
            get {
                return ResourceManager.GetString("NameFilesAccordingToTypeNames_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File names should match type names.
        /// </summary>
        internal static string NameFilesAccordingToTypeNames_Title {
            get {
                return ResourceManager.GetString("NameFilesAccordingToTypeNames_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameFoldersAccordingToNamespace_Description {
            get {
                return ResourceManager.GetString("NameFoldersAccordingToNamespace_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move type &apos;{0}&apos; to folder &apos;{1}&apos;..
        /// </summary>
        internal static string NameFoldersAccordingToNamespace_Message {
            get {
                return ResourceManager.GetString("NameFoldersAccordingToNamespace_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder names should match namespace names.
        /// </summary>
        internal static string NameFoldersAccordingToNamespace_Title {
            get {
                return ResourceManager.GetString("NameFoldersAccordingToNamespace_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameInterfacesWithIPrefix_Description {
            get {
                return ResourceManager.GetString("NameInterfacesWithIPrefix_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add I prefix to the &apos;{0}&apos; interface name..
        /// </summary>
        internal static string NameInterfacesWithIPrefix_Message {
            get {
                return ResourceManager.GetString("NameInterfacesWithIPrefix_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Interface names should begin with I.
        /// </summary>
        internal static string NameInterfacesWithIPrefix_Title {
            get {
                return ResourceManager.GetString("NameInterfacesWithIPrefix_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameMethodsWithPascalCasing_Description {
            get {
                return ResourceManager.GetString("NameMethodsWithPascalCasing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename the method &apos;{0}&apos; using PascalCasing..
        /// </summary>
        internal static string NameMethodsWithPascalCasing_Message {
            get {
                return ResourceManager.GetString("NameMethodsWithPascalCasing_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods should be named with PascalCasing.
        /// </summary>
        internal static string NameMethodsWithPascalCasing_Title {
            get {
                return ResourceManager.GetString("NameMethodsWithPascalCasing_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameNamespacesWithPascalCasing_Description {
            get {
                return ResourceManager.GetString("NameNamespacesWithPascalCasing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename the namespace &apos;{0}&apos; using PascalCasing..
        /// </summary>
        internal static string NameNamespacesWithPascalCasing_Message {
            get {
                return ResourceManager.GetString("NameNamespacesWithPascalCasing_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Namespaces should be named with PascalCasing.
        /// </summary>
        internal static string NameNamespacesWithPascalCasing_Title {
            get {
                return ResourceManager.GetString("NameNamespacesWithPascalCasing_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NamePropertiesWithPascalCase_Description {
            get {
                return ResourceManager.GetString("NamePropertiesWithPascalCase_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename the property &apos;{0}&apos; using PascalCasing..
        /// </summary>
        internal static string NamePropertiesWithPascalCase_Message {
            get {
                return ResourceManager.GetString("NamePropertiesWithPascalCase_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Properties should be named with PascalCasing.
        /// </summary>
        internal static string NamePropertiesWithPascalCase_Title {
            get {
                return ResourceManager.GetString("NamePropertiesWithPascalCase_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameTypeParameterWithDescriptiveName_Description {
            get {
                return ResourceManager.GetString("NameTypeParameterWithDescriptiveName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Give T parameter a more descriptive name..
        /// </summary>
        internal static string NameTypeParameterWithDescriptiveName_Message {
            get {
                return ResourceManager.GetString("NameTypeParameterWithDescriptiveName_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameters should not be named just T.
        /// </summary>
        internal static string NameTypeParameterWithDescriptiveName_Title {
            get {
                return ResourceManager.GetString("NameTypeParameterWithDescriptiveName_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameTypeParameterWithTPrefix_Description {
            get {
                return ResourceManager.GetString("NameTypeParameterWithTPrefix_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add T prefix to the &apos;{0}&apos; type parameter name..
        /// </summary>
        internal static string NameTypeParameterWithTPrefix_Message {
            get {
                return ResourceManager.GetString("NameTypeParameterWithTPrefix_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type parameters should begin with T.
        /// </summary>
        internal static string NameTypeParameterWithTPrefix_Title {
            get {
                return ResourceManager.GetString("NameTypeParameterWithTPrefix_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameTypesWithPascalCasing_Description {
            get {
                return ResourceManager.GetString("NameTypesWithPascalCasing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename the {0} &apos;{1}&apos; using PascalCasing..
        /// </summary>
        internal static string NameTypesWithPascalCasing_Message {
            get {
                return ResourceManager.GetString("NameTypesWithPascalCasing_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Types should be named with PascalCasing.
        /// </summary>
        internal static string NameTypesWithPascalCasing_Title {
            get {
                return ResourceManager.GetString("NameTypesWithPascalCasing_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NameVariablesWithCamelCase_Description {
            get {
                return ResourceManager.GetString("NameVariablesWithCamelCase_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename the variable &apos;{0}&apos; using camelCasing..
        /// </summary>
        internal static string NameVariablesWithCamelCase_Message {
            get {
                return ResourceManager.GetString("NameVariablesWithCamelCase_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Variables should be named with camelCasing.
        /// </summary>
        internal static string NameVariablesWithCamelCase_Title {
            get {
                return ResourceManager.GetString("NameVariablesWithCamelCase_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Single line comment blocks should be preceded by empty line (or opening brace)..
        /// </summary>
        internal static string NewlineBeforeComment_Description {
            get {
                return ResourceManager.GetString("NewlineBeforeComment_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add a newline above the comment..
        /// </summary>
        internal static string NewlineBeforeComment_Message {
            get {
                return ResourceManager.GetString("NewlineBeforeComment_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments should be separated with empty line from above.
        /// </summary>
        internal static string NewlineBeforeComment_Title {
            get {
                return ResourceManager.GetString("NewlineBeforeComment_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string NoTrailingWhitespace_Description {
            get {
                return ResourceManager.GetString("NoTrailingWhitespace_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove trailing whitespace..
        /// </summary>
        internal static string NoTrailingWhitespace_Message {
            get {
                return ResourceManager.GetString("NoTrailingWhitespace_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There should be no trailing whitespace.
        /// </summary>
        internal static string NoTrailingWhitespace_Title {
            get {
                return ResourceManager.GetString("NoTrailingWhitespace_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string ParametersOnTheirOwnLines_Description {
            get {
                return ResourceManager.GetString("ParametersOnTheirOwnLines_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert newline before the &apos;{0}&apos; parameter..
        /// </summary>
        internal static string ParametersOnTheirOwnLines_Message {
            get {
                return ResourceManager.GetString("ParametersOnTheirOwnLines_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method parameters should be on their own lines..
        /// </summary>
        internal static string ParametersOnTheirOwnLines_Title {
            get {
                return ResourceManager.GetString("ParametersOnTheirOwnLines_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string SpacesBeforeTrailingComment_Description {
            get {
                return ResourceManager.GetString("SpacesBeforeTrailingComment_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ensure the trailing comment is separated by 2 spaces from the code before it..
        /// </summary>
        internal static string SpacesBeforeTrailingComment_Message {
            get {
                return ResourceManager.GetString("SpacesBeforeTrailingComment_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trailing comments should be separated by exactly 2 spaces.
        /// </summary>
        internal static string SpacesBeforeTrailingComment_Title {
            get {
                return ResourceManager.GetString("SpacesBeforeTrailingComment_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spaces should be inserted within parentheses, braces, square brackets and angle brackets..
        /// </summary>
        internal static string SpacesWithinBrackets_Description {
            get {
                return ResourceManager.GetString("SpacesWithinBrackets_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insert a space inside the {0}..
        /// </summary>
        internal static string SpacesWithinBrackets_Message {
            get {
                return ResourceManager.GetString("SpacesWithinBrackets_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Brackets should have space inside.
        /// </summary>
        internal static string SpacesWithinBrackets_Title {
            get {
                return ResourceManager.GetString("SpacesWithinBrackets_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string UseWindowsLineEnding_Description {
            get {
                return ResourceManager.GetString("UseWindowsLineEnding_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace line endings with CRLF..
        /// </summary>
        internal static string UseWindowsLineEnding_Message {
            get {
                return ResourceManager.GetString("UseWindowsLineEnding_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files should use CRLF as line ending.
        /// </summary>
        internal static string UseWindowsLineEnding_Title {
            get {
                return ResourceManager.GetString("UseWindowsLineEnding_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All method parameters should be documented with the &lt;param&gt; tag..
        /// </summary>
        internal static string XmlDocumentAllMethodParams_Description {
            get {
                return ResourceManager.GetString("XmlDocumentAllMethodParams_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add &lt;param name=&quot;{0}&quot;&gt; tag to the XML documentation..
        /// </summary>
        internal static string XmlDocumentAllMethodParams_Message {
            get {
                return ResourceManager.GetString("XmlDocumentAllMethodParams_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method parameters should have &lt;param&gt; tag.
        /// </summary>
        internal static string XmlDocumentAllMethodParams_Title {
            get {
                return ResourceManager.GetString("XmlDocumentAllMethodParams_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string XmlDocumentationNoEmptyContent_Description {
            get {
                return ResourceManager.GetString("XmlDocumentationNoEmptyContent_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add the documentation content to {0} tag..
        /// </summary>
        internal static string XmlDocumentationNoEmptyContent_Message {
            get {
                return ResourceManager.GetString("XmlDocumentationNoEmptyContent_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All XML documentation tags should have non-empty content.
        /// </summary>
        internal static string XmlDocumentationNoEmptyContent_Title {
            get {
                return ResourceManager.GetString("XmlDocumentationNoEmptyContent_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string XmlDocumentationNoMismatchedParam_Description {
            get {
                return ResourceManager.GetString("XmlDocumentationNoMismatchedParam_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove &lt;param&gt; for missing parameter &apos;{0}&apos;..
        /// </summary>
        internal static string XmlDocumentationNoMismatchedParam_Message {
            get {
                return ResourceManager.GetString("XmlDocumentationNoMismatchedParam_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Each &lt;param&gt; tag should have a matching parameter declared..
        /// </summary>
        internal static string XmlDocumentationNoMismatchedParam_Title {
            get {
                return ResourceManager.GetString("XmlDocumentationNoMismatchedParam_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All interfaces, classes, structs and enums and their items should be documented with the &lt;summary&gt; tag..
        /// </summary>
        internal static string XmlDocumentEverythingWithSummary_Description {
            get {
                return ResourceManager.GetString("XmlDocumentEverythingWithSummary_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add XML documentation to the {0} {1}..
        /// </summary>
        internal static string XmlDocumentEverythingWithSummary_Message {
            get {
                return ResourceManager.GetString("XmlDocumentEverythingWithSummary_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All items should have &lt;summary&gt; documentation.
        /// </summary>
        internal static string XmlDocumentEverythingWithSummary_Title {
            get {
                return ResourceManager.GetString("XmlDocumentEverythingWithSummary_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All methods that return a value should be documented with the &lt;returns&gt; tag..
        /// </summary>
        internal static string XmlDocumentReturnValues_Description {
            get {
                return ResourceManager.GetString("XmlDocumentReturnValues_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add &lt;returns&gt; tag to the XML documentation for method &apos;{0}&apos;..
        /// </summary>
        internal static string XmlDocumentReturnValues_Message {
            get {
                return ResourceManager.GetString("XmlDocumentReturnValues_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Methods that return a value should have &lt;returns&gt; tag.
        /// </summary>
        internal static string XmlDocumentReturnValues_Title {
            get {
                return ResourceManager.GetString("XmlDocumentReturnValues_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Various XML documentation rules are not being processed correctly unless the XML documentation file is generated..
        /// </summary>
        internal static string XmlEnableDocumentationGeneration_Description {
            get {
                return ResourceManager.GetString("XmlEnableDocumentationGeneration_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable XML documentation generation..
        /// </summary>
        internal static string XmlEnableDocumentationGeneration_Message {
            get {
                return ResourceManager.GetString("XmlEnableDocumentationGeneration_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XML documentation should be processed..
        /// </summary>
        internal static string XmlEnableDocumentationGeneration_Title {
            get {
                return ResourceManager.GetString("XmlEnableDocumentationGeneration_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string XmlNoMultipleParamsWIthSameName_Description {
            get {
                return ResourceManager.GetString("XmlNoMultipleParamsWIthSameName_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove duplicate &lt;param name=&quot;{0}&quot;&gt;.
        /// </summary>
        internal static string XmlNoMultipleParamsWIthSameName_Message {
            get {
                return ResourceManager.GetString("XmlNoMultipleParamsWIthSameName_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There should be no duplicate &lt;param&gt; tags with the same name.
        /// </summary>
        internal static string XmlNoMultipleParamsWIthSameName_Title {
            get {
                return ResourceManager.GetString("XmlNoMultipleParamsWIthSameName_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        internal static string XmlNoMultipleXmlDocumentationSegments_Description {
            get {
                return ResourceManager.GetString("XmlNoMultipleXmlDocumentationSegments_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Merge multiple XMLdocumentation blocks..
        /// </summary>
        internal static string XmlNoMultipleXmlDocumentationSegments_Message {
            get {
                return ResourceManager.GetString("XmlNoMultipleXmlDocumentationSegments_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There should be only one XMLdocumentation block.
        /// </summary>
        internal static string XmlNoMultipleXmlDocumentationSegments_Title {
            get {
                return ResourceManager.GetString("XmlNoMultipleXmlDocumentationSegments_Title", resourceCulture);
            }
        }
    }
}
